原子变量和非阻塞同步机制

1、锁的劣势
	挂起和恢复需要很大的开销
	优先级反转：被阻塞的线程优先级较高，持有锁的线程优先级较低
	对细粒度的操作来说开销太高，如递增计数器或互斥体
	
2、硬件对并发的支持
	比较并交换
	非阻塞的计数器
	atomicXxx是Java基于CAS操作实现的
	
3、原子变量类
	比锁的粒度更细，量级更轻，将发生竞争的范围缩小到变量上
	原子变量是一种更好的volatile
	在中低强度的竞争下，原子变量能提供更高的可伸缩性，而在高强度的竞争下，锁能更有效地避免竞争
	
4、非阻塞算法	特性：某项工作的完成具有不确定性，失败的话必须重新执行
	非阻塞的栈：ConcurrentStack.java
	非阻塞的链表：LinkedQueue.java
	原子的域更新器：AtomicReferenceFieldUpdater
	ABA问题：A->B->A 两个A状态是不一样的，AtomicStampedReference保存两个值，即引用和版本号