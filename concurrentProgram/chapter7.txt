取消和关闭
  让任务或线程停下来，Java里用中断(一个线程去终止另一个线程且是非抢占式)来实现

1、任务取消
  方式1：设置标志
  方式2：中断请求
    向正在执行的线程发出中断请求，由线程在合适的时候中断自己
  方式3：Future

2、停止基于线程的服务
  日志服务：是生产者-消费者操作，需要同时取消生产者和消费者
  毒丸
  ExecutorService的关闭：shutdownNow(强制)和shutdown(非强制)

3、处理非正常的线程终止
  因为RunntimeException不会被捕获，所有当线程由于RunntimeException而产生错误时需要捕获异常并处理
  方式1：自己捕获并处理
  方式2：由UncaughtExceptionHandler处理。写入日志、重启线程、关闭程序等

4、jvm关闭
  正常关闭：
    所有“正常(非守护)”线程结束
    System.exit
    特定于平台的方法，例如发送SIGNAL信号或键入Ctrl-C
  强制关闭：
    Runntime.halt
    杀死jvm进程

  正常关闭：调用所有关闭钩子(一些用来关闭的线程)->调用终结器(可选)->jvm停止
  强制关闭：若关闭钩子或终结器没有执行完成，则变为强制关闭(只关闭jvm)
  添加关闭钩子：Runtime.addShutdownHook()

  守护线程(Daemon Thread)：辅助其他线程运行的线程，当jvm中只有守护线程时会关闭

  终结器：在finalize方法中定义，尽量不用
