传递和返回对象

1、句柄是一种安全指针，通过句柄的传递可以改变所指的对象

2、clone
    浅复制：只复制了对象的表面部分(指向此对象的句柄).
    深复制，对象的每个句柄进行复制(指向此对象的句柄，和对象中指向其他的句柄)

    Object.clone():用RTTI判断被克隆的对象的实际大小，复制到新建的克隆空间

    总之，如果希望一个类能够克隆，那么：
    (1) 实现Cloneable 接口
    (2) 覆盖clone()
    (3) 在自己的clone()中调用super.clone()
    (4) 在自己的clone()中捕获违例

3、clone和Serialization复制的区别
    通过序列化进行深层复制：实现简单(只要实现接口)，时间长，而且时间不确定
    通过克隆进行深层复制：实现稍微复杂(实现接口，重写方法),时间短，且时间固定

4、类如果不实现Cloneable，就不能克隆，如果实现了克隆，它和它的子类都可以克隆

5、可以象c++一样用一个构造方法实现克隆
